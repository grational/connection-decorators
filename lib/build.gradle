/*
 * This build file was auto generated by 'gigawatt'
 * @author gsus
 * @date 17-11-2016 11.14
 */

// [plugins] this block must be the first
plugins {
	// support for groovy
	id 'groovy'
	id 'java-library'
	// required by jitpack
	id 'maven-publish'
	// awesome git tag / gradle version integration
	id 'pl.allegro.tech.build.axion-release' version '1.13.3'
}

// [general] configuration
project.ext {
	groovyVersion   = '3.0.8'
	gradleVersion   = '7.1.1'
	spockVersion    = '2.0-groovy-3.0'
	slf4jVersion    = '1.7.31'
	cacheDecVersion = '0.3.0'
	wiremockVersion = '2.27.2'
}

scmVersion {
	tag {
		prefix = 'release-'
	}
}

project.with {
	//project.name is set in the settings.gradle with rootProject.name
	group                 'it.italiaonline.rnd'
	version               scmVersion.version // '0.5.0' (remove -SNAPSHOT for releases)
	description           'Provide functionalities as caching and retrying to any URL connection.'
}

// target java 8
allprojects {
	sourceCompatibility = 8
	targetCompatibility = sourceCompatibility
}

repositories {
	jcenter()

	maven { url "https://jitpack.io" }
}

dependencies {
	implementation (
		"org.codehaus.groovy:groovy:$groovyVersion",
		"org.slf4j:slf4j-api:$slf4jVersion"
	)

	api (
		"com.github.grational:cache-decorators:$cacheDecVersion"
	)

	// We use the awesome Spock testing and specification framework
	testImplementation (
		"org.spockframework:spock-core:$spockVersion",
		"com.github.tomakehurst:wiremock:$wiremockVersion"
	)
}

// [tasks] configuration //
tasks.withType(Test) {
	useJUnitPlatform()
	maxParallelForks = Runtime.runtime.availableProcessors() / 2
}

jar {
	// execute check task when create the jar
	dependsOn 'check'
}

check {
	// clean before check
	dependsOn 'clean'
}

// [tasks] definition
task listJars {
	description = 'print out the jars used by the project'
	doLast {
		configurations.compile.each { File file -> println file.name }
	}
}

// vim: ft=groovy:fdm=indent
